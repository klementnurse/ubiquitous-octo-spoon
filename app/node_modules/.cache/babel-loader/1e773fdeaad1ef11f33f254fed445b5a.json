{"ast":null,"code":"import _regeneratorRuntime from \"/Users/matthew/Desktop/optizmo/webapp/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/matthew/Desktop/optizmo/webapp/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\n\nvar checkEligibility = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(campaignId, request) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"/campaigns/\".concat(campaignId, \"/complaints/eligibility\"), {\n              params: request\n            });\n\n          case 2:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function checkEligibility(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport { checkEligibility };","map":{"version":3,"sources":["/Users/matthew/Desktop/optizmo/webapp/app/src/services/complaint.ts"],"names":["axios","checkEligibility","campaignId","request","get","params","res","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAMA,IAAMC,gBAAgB;AAAA,sEAAG,iBACvBC,UADuB,EAEvBC,OAFuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAILH,KAAK,CAACI,GAAN,sBACFF,UADE,8BAEhB;AACEG,cAAAA,MAAM,EAAEF;AADV,aAFgB,CAJK;;AAAA;AAIjBG,YAAAA,GAJiB;AAAA,6CAUhBA,GAAG,CAACC,IAVY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBN,gBAAgB;AAAA;AAAA;AAAA,GAAtB;;AAaA,SAASA,gBAAT","sourcesContent":["import axios from 'axios'\nimport {\n  ComplaintEligibilityRequest,\n  ComplaintEligibilityResponse\n} from '../contracts'\n\nconst checkEligibility = async (\n  campaignId: number,\n  request: ComplaintEligibilityRequest\n) => {\n  const res = await axios.get<ComplaintEligibilityResponse>(\n    `/campaigns/${campaignId}/complaints/eligibility`,\n    {\n      params: request\n    }\n  )\n  return res.data\n}\n\nexport { checkEligibility }\n"]},"metadata":{},"sourceType":"module"}