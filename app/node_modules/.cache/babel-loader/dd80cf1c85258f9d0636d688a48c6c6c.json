{"ast":null,"code":"import { parsePhoneNumber } from 'libphonenumber-js';\n/**\n * Format an international phone number with libphonenumber-js.\n */\n\nexport var formatInternationalPhone = function formatInternationalPhone(phone) {\n  var phoneToParse = phone.trim();\n\n  if (phoneToParse[0] !== '+') {\n    phoneToParse = \"+\".concat(phoneToParse);\n  }\n\n  var parsed;\n\n  try {\n    parsed = parsePhoneNumber(phoneToParse);\n  } catch (error) {\n    return phone.trim();\n  }\n\n  if (parsed && parsed.isValid()) {\n    return parsed.formatInternational();\n  }\n\n  return phone.trim();\n};","map":{"version":3,"sources":["/Users/matthew/Desktop/static/app/src/utils/format-international-phone.ts"],"names":["parsePhoneNumber","formatInternationalPhone","phone","phoneToParse","trim","parsed","error","isValid","formatInternational"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,mBAAjC;AAEA;AACA;AACA;;AACA,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,KAAD,EAAmB;AACzD,MAAIC,YAAY,GAAGD,KAAK,CAACE,IAAN,EAAnB;;AACA,MAAID,YAAY,CAAC,CAAD,CAAZ,KAAoB,GAAxB,EAA6B;AAC3BA,IAAAA,YAAY,cAAOA,YAAP,CAAZ;AACD;;AACD,MAAIE,MAAJ;;AAEA,MAAI;AACFA,IAAAA,MAAM,GAAGL,gBAAgB,CAACG,YAAD,CAAzB;AACD,GAFD,CAEE,OAAOG,KAAP,EAAc;AACd,WAAOJ,KAAK,CAACE,IAAN,EAAP;AACD;;AAED,MAAIC,MAAM,IAAIA,MAAM,CAACE,OAAP,EAAd,EAAgC;AAC9B,WAAOF,MAAM,CAACG,mBAAP,EAAP;AACD;;AAED,SAAON,KAAK,CAACE,IAAN,EAAP;AACD,CAlBM","sourcesContent":["import { parsePhoneNumber } from 'libphonenumber-js'\n\n/**\n * Format an international phone number with libphonenumber-js.\n */\nexport const formatInternationalPhone = (phone: string) => {\n  let phoneToParse = phone.trim()\n  if (phoneToParse[0] !== '+') {\n    phoneToParse = `+${phoneToParse}`\n  }\n  let parsed\n\n  try {\n    parsed = parsePhoneNumber(phoneToParse)\n  } catch (error) {\n    return phone.trim()\n  }\n\n  if (parsed && parsed.isValid()) {\n    return parsed.formatInternational()\n  }\n\n  return phone.trim()\n}\n"]},"metadata":{},"sourceType":"module"}