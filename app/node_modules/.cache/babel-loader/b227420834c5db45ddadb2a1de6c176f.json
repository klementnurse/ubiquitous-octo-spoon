{"ast":null,"code":"'use strict';\n\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\n\nvar anObject = require('../internals/an-object');\n\nvar toLength = require('../internals/to-length');\n\nvar toString = require('../internals/to-string');\n\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar getMethod = require('../internals/get-method');\n\nvar advanceStringIndex = require('../internals/advance-string-index');\n\nvar regExpExec = require('../internals/regexp-exec-abstract'); // @@match logic\n\n\nfixRegExpWellKnownSymbolLogic('match', function (MATCH, nativeMatch, maybeCallNative) {\n  return [// `String.prototype.match` method\n  // https://tc39.es/ecma262/#sec-string.prototype.match\n  function match(regexp) {\n    var O = requireObjectCoercible(this);\n    var matcher = regexp == undefined ? undefined : getMethod(regexp, MATCH);\n    return matcher ? matcher.call(regexp, O) : new RegExp(regexp)[MATCH](toString(O));\n  }, // `RegExp.prototype[@@match]` method\n  // https://tc39.es/ecma262/#sec-regexp.prototype-@@match\n  function (string) {\n    var rx = anObject(this);\n    var S = toString(string);\n    var res = maybeCallNative(nativeMatch, rx, S);\n    if (res.done) return res.value;\n    if (!rx.global) return regExpExec(rx, S);\n    var fullUnicode = rx.unicode;\n    rx.lastIndex = 0;\n    var A = [];\n    var n = 0;\n    var result;\n\n    while ((result = regExpExec(rx, S)) !== null) {\n      var matchStr = toString(result[0]);\n      A[n] = matchStr;\n      if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      n++;\n    }\n\n    return n === 0 ? null : A;\n  }];\n});","map":{"version":3,"sources":["/Users/matthew/Desktop/static/app/node_modules/core-js/modules/es.string.match.js"],"names":["fixRegExpWellKnownSymbolLogic","require","anObject","toLength","toString","requireObjectCoercible","getMethod","advanceStringIndex","regExpExec","MATCH","nativeMatch","maybeCallNative","match","regexp","O","matcher","undefined","call","RegExp","string","rx","S","res","done","value","global","fullUnicode","unicode","lastIndex","A","n","result","matchStr"],"mappings":"AAAA;;AACA,IAAIA,6BAA6B,GAAGC,OAAO,CAAC,iDAAD,CAA3C;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAII,sBAAsB,GAAGJ,OAAO,CAAC,uCAAD,CAApC;;AACA,IAAIK,SAAS,GAAGL,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIM,kBAAkB,GAAGN,OAAO,CAAC,mCAAD,CAAhC;;AACA,IAAIO,UAAU,GAAGP,OAAO,CAAC,mCAAD,CAAxB,C,CAEA;;;AACAD,6BAA6B,CAAC,OAAD,EAAU,UAAUS,KAAV,EAAiBC,WAAjB,EAA8BC,eAA9B,EAA+C;AACpF,SAAO,CACL;AACA;AACA,WAASC,KAAT,CAAeC,MAAf,EAAuB;AACrB,QAAIC,CAAC,GAAGT,sBAAsB,CAAC,IAAD,CAA9B;AACA,QAAIU,OAAO,GAAGF,MAAM,IAAIG,SAAV,GAAsBA,SAAtB,GAAkCV,SAAS,CAACO,MAAD,EAASJ,KAAT,CAAzD;AACA,WAAOM,OAAO,GAAGA,OAAO,CAACE,IAAR,CAAaJ,MAAb,EAAqBC,CAArB,CAAH,GAA6B,IAAII,MAAJ,CAAWL,MAAX,EAAmBJ,KAAnB,EAA0BL,QAAQ,CAACU,CAAD,CAAlC,CAA3C;AACD,GAPI,EAQL;AACA;AACA,YAAUK,MAAV,EAAkB;AAChB,QAAIC,EAAE,GAAGlB,QAAQ,CAAC,IAAD,CAAjB;AACA,QAAImB,CAAC,GAAGjB,QAAQ,CAACe,MAAD,CAAhB;AACA,QAAIG,GAAG,GAAGX,eAAe,CAACD,WAAD,EAAcU,EAAd,EAAkBC,CAAlB,CAAzB;AAEA,QAAIC,GAAG,CAACC,IAAR,EAAc,OAAOD,GAAG,CAACE,KAAX;AAEd,QAAI,CAACJ,EAAE,CAACK,MAAR,EAAgB,OAAOjB,UAAU,CAACY,EAAD,EAAKC,CAAL,CAAjB;AAEhB,QAAIK,WAAW,GAAGN,EAAE,CAACO,OAArB;AACAP,IAAAA,EAAE,CAACQ,SAAH,GAAe,CAAf;AACA,QAAIC,CAAC,GAAG,EAAR;AACA,QAAIC,CAAC,GAAG,CAAR;AACA,QAAIC,MAAJ;;AACA,WAAO,CAACA,MAAM,GAAGvB,UAAU,CAACY,EAAD,EAAKC,CAAL,CAApB,MAAiC,IAAxC,EAA8C;AAC5C,UAAIW,QAAQ,GAAG5B,QAAQ,CAAC2B,MAAM,CAAC,CAAD,CAAP,CAAvB;AACAF,MAAAA,CAAC,CAACC,CAAD,CAAD,GAAOE,QAAP;AACA,UAAIA,QAAQ,KAAK,EAAjB,EAAqBZ,EAAE,CAACQ,SAAH,GAAerB,kBAAkB,CAACc,CAAD,EAAIlB,QAAQ,CAACiB,EAAE,CAACQ,SAAJ,CAAZ,EAA4BF,WAA5B,CAAjC;AACrBI,MAAAA,CAAC;AACF;;AACD,WAAOA,CAAC,KAAK,CAAN,GAAU,IAAV,GAAiBD,CAAxB;AACD,GA/BI,CAAP;AAiCD,CAlC4B,CAA7B","sourcesContent":["'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar getMethod = require('../internals/get-method');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@match logic\nfixRegExpWellKnownSymbolLogic('match', function (MATCH, nativeMatch, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.es/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = requireObjectCoercible(this);\n      var matcher = regexp == undefined ? undefined : getMethod(regexp, MATCH);\n      return matcher ? matcher.call(regexp, O) : new RegExp(regexp)[MATCH](toString(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@match\n    function (string) {\n      var rx = anObject(this);\n      var S = toString(string);\n      var res = maybeCallNative(nativeMatch, rx, S);\n\n      if (res.done) return res.value;\n\n      if (!rx.global) return regExpExec(rx, S);\n\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = toString(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n"]},"metadata":{},"sourceType":"script"}