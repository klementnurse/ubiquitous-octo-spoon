{"ast":null,"code":"import _objectSpread from \"/Users/matthew/Desktop/optizmo/webapp/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/matthew/Desktop/optizmo/webapp/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/matthew/Desktop/optizmo/webapp/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"/Users/matthew/Desktop/optizmo/webapp/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/matthew/Desktop/optizmo/webapp/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _excluded = [\"onToggle\"];\n\nvar _jsxFileName = \"/Users/matthew/Desktop/optizmo/webapp/app/src/components/layout/ComplaintModal.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Modal, ModalHeader, ModalBody, Fade, Button, Input, InputGroup, FormFeedback, Alert } from 'reactstrap';\nimport { validateEmail } from '../../utils';\nimport { checkEligibility } from '../../services/complaint';\nimport { useAppContext } from '../../contexts/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var generateComplaintForwardEmail = function generateComplaintForwardEmail(token, email, legacyKey) {\n  var ofcEmail = email.replace(/@/, '{a}');\n  return \"\".concat(token, \"_\").concat(ofcEmail, \"_\").concat(legacyKey, \"@optout-complaint.com\");\n};\n\nvar FormStep1 = function FormStep1(_ref) {\n  var campaignId = _ref.campaignId,\n      email = _ref.email,\n      emailValidate = _ref.emailValidate,\n      checkingEligibility = _ref.checkingEligibility,\n      eligibility = _ref.eligibility,\n      onEmailChange = _ref.onEmailChange,\n      onEmailValidateChange = _ref.onEmailValidateChange,\n      onCheckingEligibilityChange = _ref.onCheckingEligibilityChange,\n      onEligibilityChange = _ref.onEligibilityChange;\n\n  var checkEmail = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!validateEmail(email)) {\n                _context.next = 16;\n                break;\n              }\n\n              onEmailValidateChange('valid');\n              onCheckingEligibilityChange(true);\n              _context.prev = 3;\n              _context.next = 6;\n              return checkEligibility(campaignId, {\n                email: email\n              });\n\n            case 6:\n              res = _context.sent;\n              onEligibilityChange(res);\n              onCheckingEligibilityChange(false);\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](3);\n              console.error(_context.t0);\n\n            case 14:\n              _context.next = 17;\n              break;\n\n            case 16:\n              onEmailValidateChange('invalid');\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 11]]);\n    }));\n\n    return function checkEmail() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleFocus = function handleFocus() {\n    onEmailValidateChange(undefined);\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    checkEmail();\n  };\n\n  var handleChange = function handleChange(event) {\n    onEmailChange(event.target.value);\n  };\n\n  var form = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n      style: {\n        maxWidth: 500\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email Address\",\n        value: email,\n        onFocus: handleFocus,\n        onChange: handleChange,\n        valid: emailValidate === 'valid',\n        invalid: emailValidate === 'invalid',\n        \"data-testid\": \"complaint-modal__email-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: checkingEligibility,\n        children: checkingEligibility ? 'Checking...' : 'Check Your Email'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, _this), emailValidate === 'invalid' ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n      style: {\n        display: 'block'\n      },\n      children: \"Please enter a valid email address.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, _this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, _this);\n\n  var result = null;\n\n  if (eligibility) {\n    if (eligibility.eligible) {\n      result = /*#__PURE__*/_jsxDEV(Alert, {\n        color: \"success\",\n        children: [\"The email address \", email, \" is found. Please proceed to the next step.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, _this);\n    } else {\n      result = /*#__PURE__*/_jsxDEV(Alert, {\n        color: \"warning\",\n        children: eligibility.reason\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 16\n      }, _this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      children: \" 1. Check Your Email Address \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter your email below to check if your email has been added.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, _this), eligibility ? result : form]\n  }, void 0, true);\n};\n\n_c = FormStep1;\n\nvar FormStep2 = function FormStep2(_ref3) {\n  var legacyKey = _ref3.legacyKey,\n      email = _ref3.email,\n      token = _ref3.token;\n  var forwardEmail = generateComplaintForwardEmail(token, email, legacyKey);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      children: \"2. Forward The Email To\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please forward a copy of the email you received to the below email address so we can complete the complaint process. Just note that this email will only work for the next 48 hours, so please forward the email asap.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Input, {\n      readOnly: true,\n      value: forwardEmail,\n      \"data-testid\": \"complaint-modal__forward-email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: 16\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Why do I need to do this?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-muted\",\n        children: \"Sometimes emails are forwarded from another email account to your primary one. If you don't use the forwarding email to Opt-Out you will continue to receive emails. Forwarding the email helps us determine the exact email address and stop emails from being sent again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_c2 = FormStep2;\n\n/**\n * Modal with two-step form. Step 1 accepts and email address and checks if it is\n * eligible to lodge a complaint, Step 2 gives information on how to lodge the complaint.\n */\nvar ComplaintModal = function ComplaintModal(_ref4) {\n  _s();\n\n  var onToggle = _ref4.onToggle,\n      modalProps = _objectWithoutProperties(_ref4, _excluded);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      emailValidate = _useState4[0],\n      setEmailValidate = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      checkingEligibility = _useState6[0],\n      setCheckingEligibility = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      eligibility = _useState8[0],\n      setEligibility = _useState8[1];\n\n  var _useAppContext = useAppContext(),\n      campaignMailer = _useAppContext.campaignMailer;\n\n  if (!campaignMailer || !campaignMailer.legacyKey) {\n    return null;\n  }\n\n  var legacyKey = campaignMailer.legacyKey,\n      campaignId = campaignMailer.campaignId;\n\n  var reset = function reset() {\n    setEmail('');\n    setEmailValidate(undefined);\n    setCheckingEligibility(false);\n    setEligibility(undefined);\n  };\n\n  var handleEmailChange = function handleEmailChange(newEmail) {\n    setEmail(newEmail);\n  };\n\n  var handleEmailValidateChange = function handleEmailValidateChange(newEmailValidate) {\n    setEmailValidate(newEmailValidate);\n  };\n\n  var handleCheckingEligibilityChange = function handleCheckingEligibilityChange(newCheckingEligibility) {\n    setCheckingEligibility(newCheckingEligibility);\n  };\n\n  var handleEligibilityChange = function handleEligibilityChange(newEligibility) {\n    setEligibility(newEligibility);\n  };\n\n  var handleToggleModal = function handleToggleModal() {\n    onToggle();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, _objectSpread(_objectSpread({\n    size: 'lg',\n    toggle: handleToggleModal\n  }, modalProps), {}, {\n    onClosed: reset,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: handleToggleModal,\n      children: \"Still receiving emails after unsubscribing?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: [\"If you have unsubscribed and you are still receiving emails from us, please follow the below two steps to issue a complaint.\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FormStep1, {\n        campaignId: campaignId,\n        email: email,\n        emailValidate: emailValidate,\n        checkingEligibility: checkingEligibility,\n        eligibility: eligibility,\n        onEmailChange: handleEmailChange,\n        onEmailValidateChange: handleEmailValidateChange,\n        onCheckingEligibilityChange: handleCheckingEligibilityChange,\n        onEligibilityChange: handleEligibilityChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, _this), (eligibility === null || eligibility === void 0 ? void 0 : eligibility.eligible) && (eligibility === null || eligibility === void 0 ? void 0 : eligibility.token) ? /*#__PURE__*/_jsxDEV(Fade, {\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(FormStep2, {\n          legacyKey: legacyKey,\n          email: email,\n          token: eligibility.token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, _this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ComplaintModal, \"dsmywc6WbBJ33WEPaHCr0jruxAE=\", false, function () {\n  return [useAppContext];\n});\n\n_c3 = ComplaintModal;\nexport default ComplaintModal;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FormStep1\");\n$RefreshReg$(_c2, \"FormStep2\");\n$RefreshReg$(_c3, \"ComplaintModal\");","map":{"version":3,"sources":["/Users/matthew/Desktop/optizmo/webapp/app/src/components/layout/ComplaintModal.tsx"],"names":["React","useState","Modal","ModalHeader","ModalBody","Fade","Button","Input","InputGroup","FormFeedback","Alert","validateEmail","checkEligibility","useAppContext","generateComplaintForwardEmail","token","email","legacyKey","ofcEmail","replace","FormStep1","campaignId","emailValidate","checkingEligibility","eligibility","onEmailChange","onEmailValidateChange","onCheckingEligibilityChange","onEligibilityChange","checkEmail","res","console","error","handleFocus","undefined","handleSubmit","event","preventDefault","handleChange","target","value","form","maxWidth","display","result","eligible","reason","FormStep2","forwardEmail","paddingTop","ComplaintModal","onToggle","modalProps","setEmail","setEmailValidate","setCheckingEligibility","setEligibility","campaignMailer","reset","handleEmailChange","newEmail","handleEmailValidateChange","newEmailValidate","handleCheckingEligibilityChange","newCheckingEligibility","handleEligibilityChange","newEligibility","handleToggleModal"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Fade,\n  Button,\n  Input,\n  InputGroup,\n  FormFeedback,\n  Alert,\n  ModalProps\n} from 'reactstrap'\n\nimport { validateEmail } from '../../utils'\nimport { checkEligibility } from '../../services/complaint'\nimport { useAppContext } from '../../contexts/AppContext'\nimport { ComplaintEligibilityResponse } from '../../contracts'\n\nexport const generateComplaintForwardEmail = (\n  token: string,\n  email: string,\n  legacyKey: string\n) => {\n  const ofcEmail = email.replace(/@/, '{a}')\n  return `${token}_${ofcEmail}_${legacyKey}@optout-complaint.com`\n}\n\nconst FormStep1 = ({\n  campaignId,\n  email,\n  emailValidate,\n  checkingEligibility,\n  eligibility,\n  onEmailChange,\n  onEmailValidateChange,\n  onCheckingEligibilityChange,\n  onEligibilityChange\n}: {\n  campaignId: number\n  email: string\n  emailValidate: EmailValidateOptions\n  checkingEligibility: boolean\n  eligibility?: ComplaintEligibilityResponse\n  onEmailChange(newEmail: string): void\n  onEmailValidateChange(newEmailValidate: EmailValidateOptions): void\n  onCheckingEligibilityChange(newCheckingEligibility: boolean): void\n  onEligibilityChange(newEligibility: ComplaintEligibilityResponse): void\n}) => {\n  const checkEmail = async () => {\n    if (validateEmail(email)) {\n      onEmailValidateChange('valid')\n      onCheckingEligibilityChange(true)\n\n      try {\n        const res = await checkEligibility(campaignId, { email })\n        onEligibilityChange(res)\n        onCheckingEligibilityChange(false)\n      } catch (error) {\n        console.error(error)\n      }\n    } else {\n      onEmailValidateChange('invalid')\n    }\n  }\n\n  const handleFocus = () => {\n    onEmailValidateChange(undefined)\n  }\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    checkEmail()\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onEmailChange(event.target.value)\n  }\n\n  const form = (\n    <form onSubmit={handleSubmit}>\n      <InputGroup\n        style={{\n          maxWidth: 500\n        }}\n      >\n        <Input\n          type='email'\n          name='email'\n          placeholder='Email Address'\n          value={email}\n          onFocus={handleFocus}\n          onChange={handleChange}\n          valid={emailValidate === 'valid'}\n          invalid={emailValidate === 'invalid'}\n          data-testid='complaint-modal__email-input'\n        />\n        <Button disabled={checkingEligibility}>\n          {checkingEligibility ? 'Checking...' : 'Check Your Email'}\n        </Button>\n      </InputGroup>\n      {emailValidate === 'invalid' ? (\n        <FormFeedback style={{ display: 'block' }}>\n          Please enter a valid email address.\n        </FormFeedback>\n      ) : null}\n    </form>\n  )\n\n  let result = null\n\n  if (eligibility) {\n    if (eligibility.eligible) {\n      result = (\n        <Alert color='success'>\n          The email address {email} is found. Please proceed to the next step.\n        </Alert>\n      )\n    } else {\n      result = <Alert color='warning'>{eligibility.reason}</Alert>\n    }\n  }\n\n  return (\n    <>\n      <h6> 1. Check Your Email Address </h6>\n      <p>Enter your email below to check if your email has been added.</p>\n\n      {eligibility ? result : form}\n    </>\n  )\n}\n\nconst FormStep2 = ({\n  legacyKey,\n  email,\n  token\n}: {\n  legacyKey: string\n  email: string\n  token: string\n}) => {\n  const forwardEmail = generateComplaintForwardEmail(token, email, legacyKey)\n\n  return (\n    <>\n      <h6>2. Forward The Email To</h6>\n      <p>\n        Please forward a copy of the email you received to the below email\n        address so we can complete the complaint process. Just note that this\n        email will only work for the next 48 hours, so please forward the email\n        asap.\n      </p>\n\n      <Input\n        readOnly\n        value={forwardEmail}\n        data-testid='complaint-modal__forward-email'\n      />\n\n      {/* spacer */}\n      <div style={{ paddingTop: 16 }} />\n\n      <strong>Why do I need to do this?</strong>\n      <p>\n        <small className='text-muted'>\n          Sometimes emails are forwarded from another email account to your\n          primary one. If you don&apos;t use the forwarding email to Opt-Out you\n          will continue to receive emails. Forwarding the email helps us\n          determine the exact email address and stop emails from being sent\n          again.\n        </small>\n      </p>\n    </>\n  )\n}\n\ntype EmailValidateOptions = 'valid' | 'invalid' | undefined\n\nexport interface ComplaintModalProps extends ModalProps {\n  /**\n   * When the modal is toggled internally. Does not track whether open or not.\n   */\n  onToggle(): void\n}\n\n/**\n * Modal with two-step form. Step 1 accepts and email address and checks if it is\n * eligible to lodge a complaint, Step 2 gives information on how to lodge the complaint.\n */\nconst ComplaintModal = ({ onToggle, ...modalProps }: ComplaintModalProps) => {\n  const [email, setEmail] = useState('')\n  const [emailValidate, setEmailValidate] = useState<EmailValidateOptions>()\n  const [checkingEligibility, setCheckingEligibility] = useState(false)\n  const [eligibility, setEligibility] = useState<\n    ComplaintEligibilityResponse | undefined\n  >()\n  const { campaignMailer } = useAppContext()\n\n  if (!campaignMailer || !campaignMailer.legacyKey) {\n    return null\n  }\n\n  const { legacyKey, campaignId } = campaignMailer\n\n  const reset = () => {\n    setEmail('')\n    setEmailValidate(undefined)\n    setCheckingEligibility(false)\n    setEligibility(undefined)\n  }\n\n  const handleEmailChange = (newEmail: string) => {\n    setEmail(newEmail)\n  }\n\n  const handleEmailValidateChange = (\n    newEmailValidate: EmailValidateOptions\n  ) => {\n    setEmailValidate(newEmailValidate)\n  }\n\n  const handleCheckingEligibilityChange = (newCheckingEligibility: boolean) => {\n    setCheckingEligibility(newCheckingEligibility)\n  }\n\n  const handleEligibilityChange = (\n    newEligibility: ComplaintEligibilityResponse\n  ) => {\n    setEligibility(newEligibility)\n  }\n\n  const handleToggleModal = () => {\n    onToggle()\n  }\n\n  return (\n    <Modal\n      size={'lg'}\n      toggle={handleToggleModal}\n      {...modalProps}\n      onClosed={reset}\n    >\n      <ModalHeader toggle={handleToggleModal}>\n        Still receiving emails after unsubscribing?\n      </ModalHeader>\n      <ModalBody>\n        If you have unsubscribed and you are still receiving emails from us,\n        please follow the below two steps to issue a complaint.\n        <hr />\n        <FormStep1\n          campaignId={campaignId}\n          email={email}\n          emailValidate={emailValidate}\n          checkingEligibility={checkingEligibility}\n          eligibility={eligibility}\n          onEmailChange={handleEmailChange}\n          onEmailValidateChange={handleEmailValidateChange}\n          onCheckingEligibilityChange={handleCheckingEligibilityChange}\n          onEligibilityChange={handleEligibilityChange}\n        />\n        {eligibility?.eligible && eligibility?.token ? (\n          <Fade>\n            <hr />\n\n            <FormStep2\n              legacyKey={legacyKey}\n              email={email}\n              token={eligibility.token}\n            />\n          </Fade>\n        ) : null}\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default ComplaintModal\n"]},"metadata":{},"sourceType":"module"}