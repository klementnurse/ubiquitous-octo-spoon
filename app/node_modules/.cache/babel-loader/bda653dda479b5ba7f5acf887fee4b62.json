{"ast":null,"code":"import _slicedToArray from \"/Users/matthew/Desktop/optizmo/webapp/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/matthew/Desktop/optizmo/webapp/app/src/components/layout/PrivacyLink.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n/**\n * Display a link to either an external privacy page, or a modal window with privacy\n * content. If neither are provided, no link is shown.\n */\nvar PrivacyLink = function PrivacyLink(_ref) {\n  _s();\n\n  var content = _ref.content,\n      link = _ref.link,\n      style = _ref.style;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var toggleModal = function toggleModal(event) {\n    event.preventDefault();\n    setShowModal(!showModal);\n  };\n\n  if (link) {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: link,\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      style: style,\n      children: \"Privacy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, _this);\n  }\n\n  if (!content) {\n    // Empty <div /> required for parent flex-container to properly layout children.\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showModal,\n      toggle: toggleModal,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggleModal,\n        children: \"Privacy Statement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, _this),\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-is-valid -- Too scared to change this to a <button />.\n    _jsxDEV(\"a\", {\n      href: \"#\",\n      style: style,\n      onClick: toggleModal,\n      children: \"Privacy Statement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(PrivacyLink, \"uVlnG5KLfXemZk5i5Fl+Cg356FU=\");\n\n_c = PrivacyLink;\nexport default PrivacyLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivacyLink\");","map":{"version":3,"sources":["/Users/matthew/Desktop/optizmo/webapp/app/src/components/layout/PrivacyLink.tsx"],"names":["useState","Modal","ModalHeader","ModalBody","PrivacyLink","content","link","style","showModal","setShowModal","toggleModal","event","preventDefault"],"mappings":";;;;;;AAAA,SAAwBA,QAAxB,QAAwC,OAAxC;AACA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,YAA9C;;;;AAoBA;AACA;AACA;AACA;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAgD;AAAA;;AAAA,MAA7CC,OAA6C,QAA7CA,OAA6C;AAAA,MAApCC,IAAoC,QAApCA,IAAoC;AAAA,MAA9BC,KAA8B,QAA9BA,KAA8B;;AAClE,kBAAkCP,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOQ,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAA6B;AAC/CA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAHD;;AAKA,MAAIF,IAAJ,EAAU;AACR,wBACE;AAAG,MAAA,IAAI,EAAEA,IAAT;AAAe,MAAA,MAAM,EAAC,QAAtB;AAA+B,MAAA,GAAG,EAAC,YAAnC;AAAgD,MAAA,KAAK,EAAEC,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAKD;;AAED,MAAI,CAACF,OAAL,EAAc;AACZ;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEG,SAAf;AAA0B,MAAA,MAAM,EAAEE,WAAlC;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,MAAM,EAAEA,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,SAAD;AAAA,kBAAYL;AAAZ;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAAA;AAMI;AACA;AAAG,MAAA,IAAI,EAAC,GAAR;AAAY,MAAA,KAAK,EAAEE,KAAnB;AAA0B,MAAA,OAAO,EAAEG,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPJ;AAAA,kBADF;AAcD,CAnCD;;GAAMN,W;;KAAAA,W;AAqCN,eAAeA,WAAf","sourcesContent":["import { CSSProperties, useState } from 'react'\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\n\nexport interface PrivacyLinkProps {\n  /**\n   * Privacy content to display in a modal.\n   */\n  content?: string\n\n  /**\n   * Link to an external privacy page url instead of displaying the privacy content\n   * in a modal.\n   */\n  link?: string\n\n  /**\n   * Extra CSS styling for the link. Used for page customisation.\n   */\n  style?: CSSProperties\n}\n\n/**\n * Display a link to either an external privacy page, or a modal window with privacy\n * content. If neither are provided, no link is shown.\n */\nconst PrivacyLink = ({ content, link, style }: PrivacyLinkProps) => {\n  const [showModal, setShowModal] = useState(false)\n\n  const toggleModal = (event: React.MouseEvent) => {\n    event.preventDefault()\n    setShowModal(!showModal)\n  }\n\n  if (link) {\n    return (\n      <a href={link} target='_blank' rel='noreferrer' style={style}>\n        Privacy\n      </a>\n    )\n  }\n\n  if (!content) {\n    // Empty <div /> required for parent flex-container to properly layout children.\n    return <div></div>\n  }\n\n  return (\n    <>\n      <Modal isOpen={showModal} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}>Privacy Statement</ModalHeader>\n        <ModalBody>{content}</ModalBody>\n      </Modal>\n      {\n        // eslint-disable-next-line jsx-a11y/anchor-is-valid -- Too scared to change this to a <button />.\n        <a href='#' style={style} onClick={toggleModal}>\n          Privacy Statement\n        </a>\n      }\n    </>\n  )\n}\n\nexport default PrivacyLink\n"]},"metadata":{},"sourceType":"module"}