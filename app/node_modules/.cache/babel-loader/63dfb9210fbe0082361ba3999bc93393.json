{"ast":null,"code":"import _regeneratorRuntime from \"/Users/matthew/Desktop/static/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/matthew/Desktop/static/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { OptoutType, ServerUnavailableError } from '../contracts';\nimport globalState from '../globalState';\n/**\n * Verifies and fetches details about the optout campaign to display to the user\n * @param key Optout key to verify\n * @returns\n */\n\nvar verifyKey = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(key) {\n    var response, data, axiosError, status;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.post('/auth/legacy/optout-key', {\n              key: key\n            });\n\n          case 3:\n            response = _context.sent;\n            // Transform data to frontend contract.\n            data = {\n              token: response.data.token,\n              campaignId: response.data.campaign_id,\n              mailerId: response.data.mailer_id,\n              cmaId: response.data.cma_id,\n              jailedAdvertiserId: response.data.jailed_advertiser_id,\n              optoutAdRatio: response.data.optout_ad_ratio,\n              optoutAdRedirectUrl: response.data.optout_ad_redirect_url,\n              sourceClientId: response.data.source_client_id,\n              targetClientId: response.data.target_client_id,\n              optoutType: response.data.optout_type || OptoutType.Email,\n              legacyKey: key\n            };\n            globalState.accessToken = data.token;\n            return _context.abrupt(\"return\", data);\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            axiosError = _context.t0;\n            status = axiosError.response ? axiosError.response.status : null;\n\n            if (!(status && status >= 400 && status < 500)) {\n              _context.next = 15;\n              break;\n            }\n\n            throw _context.t0;\n\n          case 15:\n            throw new ServerUnavailableError('Failed to communicate with server while fetching CampaignMailer.');\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 9]]);\n  }));\n\n  return function verifyKey(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar simpleToken = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.get('/legacy/simple-token');\n\n          case 2:\n            res = _context2.sent;\n            return _context2.abrupt(\"return\", res.data.token);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function simpleToken() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport { verifyKey, simpleToken };","map":{"version":3,"sources":["/Users/matthew/Desktop/static/app/src/services/legacy.ts"],"names":["axios","OptoutType","ServerUnavailableError","globalState","verifyKey","key","post","response","data","token","campaignId","campaign_id","mailerId","mailer_id","cmaId","cma_id","jailedAdvertiserId","jailed_advertiser_id","optoutAdRatio","optout_ad_ratio","optoutAdRedirectUrl","optout_ad_redirect_url","sourceClientId","source_client_id","targetClientId","target_client_id","optoutType","optout_type","Email","legacyKey","accessToken","axiosError","status","simpleToken","get","res"],"mappings":";;AAAA,OAAOA,KAAP,MAAkC,OAAlC;AACA,SAGEC,UAHF,EAIEC,sBAJF,QAKO,cALP;AAMA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA;AACA;AACA;AACA;AACA;;AACA,IAAMC,SAAS;AAAA,sEAAG,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAESL,KAAK,CAACM,IAAN,CACrB,yBADqB,EAErB;AACED,cAAAA,GAAG,EAAHA;AADF,aAFqB,CAFT;;AAAA;AAERE,YAAAA,QAFQ;AAQd;AACMC,YAAAA,IATQ,GASe;AAC3BC,cAAAA,KAAK,EAAEF,QAAQ,CAACC,IAAT,CAAcC,KADM;AAE3BC,cAAAA,UAAU,EAAEH,QAAQ,CAACC,IAAT,CAAcG,WAFC;AAG3BC,cAAAA,QAAQ,EAAEL,QAAQ,CAACC,IAAT,CAAcK,SAHG;AAI3BC,cAAAA,KAAK,EAAEP,QAAQ,CAACC,IAAT,CAAcO,MAJM;AAK3BC,cAAAA,kBAAkB,EAAET,QAAQ,CAACC,IAAT,CAAcS,oBALP;AAM3BC,cAAAA,aAAa,EAAEX,QAAQ,CAACC,IAAT,CAAcW,eANF;AAO3BC,cAAAA,mBAAmB,EAAEb,QAAQ,CAACC,IAAT,CAAca,sBAPR;AAQ3BC,cAAAA,cAAc,EAAEf,QAAQ,CAACC,IAAT,CAAce,gBARH;AAS3BC,cAAAA,cAAc,EAAEjB,QAAQ,CAACC,IAAT,CAAciB,gBATH;AAU3BC,cAAAA,UAAU,EAAEnB,QAAQ,CAACC,IAAT,CAAcmB,WAAd,IAA6B1B,UAAU,CAAC2B,KAVzB;AAW3BC,cAAAA,SAAS,EAAExB;AAXgB,aATf;AAuBdF,YAAAA,WAAW,CAAC2B,WAAZ,GAA0BtB,IAAI,CAACC,KAA/B;AAvBc,6CAyBPD,IAzBO;;AAAA;AAAA;AAAA;AA2BRuB,YAAAA,UA3BQ;AA4BRC,YAAAA,MA5BQ,GA4BCD,UAAU,CAACxB,QAAX,GAAsBwB,UAAU,CAACxB,QAAX,CAAoByB,MAA1C,GAAmD,IA5BpD;;AAAA,kBA8BVA,MAAM,IAAIA,MAAM,IAAI,GAApB,IAA2BA,MAAM,GAAG,GA9B1B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,kBAmCR,IAAI9B,sBAAJ,CACJ,kEADI,CAnCQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATE,SAAS;AAAA;AAAA;AAAA,GAAf;;AAyCA,IAAM6B,WAAW;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACAjC,KAAK,CAACkC,GAAN,CAAU,sBAAV,CADA;;AAAA;AACZC,YAAAA,GADY;AAAA,8CAEXA,GAAG,CAAC3B,IAAJ,CAASC,KAFE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXwB,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAKA,SAAS7B,SAAT,EAAoB6B,WAApB","sourcesContent":["import axios, { AxiosError } from 'axios'\nimport {\n  CampaignMailer,\n  OptoutKeyResponse,\n  OptoutType,\n  ServerUnavailableError\n} from '../contracts'\nimport globalState from '../globalState'\n\n/**\n * Verifies and fetches details about the optout campaign to display to the user\n * @param key Optout key to verify\n * @returns\n */\nconst verifyKey = async (key: string) => {\n  try {\n    const response = await axios.post<OptoutKeyResponse>(\n      '/auth/legacy/optout-key',\n      {\n        key\n      }\n    )\n    // Transform data to frontend contract.\n    const data: CampaignMailer = {\n      token: response.data.token,\n      campaignId: response.data.campaign_id,\n      mailerId: response.data.mailer_id,\n      cmaId: response.data.cma_id,\n      jailedAdvertiserId: response.data.jailed_advertiser_id,\n      optoutAdRatio: response.data.optout_ad_ratio,\n      optoutAdRedirectUrl: response.data.optout_ad_redirect_url,\n      sourceClientId: response.data.source_client_id,\n      targetClientId: response.data.target_client_id,\n      optoutType: response.data.optout_type || OptoutType.Email,\n      legacyKey: key\n    }\n\n    globalState.accessToken = data.token\n\n    return data\n  } catch (error) {\n    const axiosError = error as AxiosError\n    const status = axiosError.response ? axiosError.response.status : null\n\n    if (status && status >= 400 && status < 500) {\n      throw error\n    }\n\n    // Indicate the app should fallback to basic collection mode.\n    throw new ServerUnavailableError(\n      'Failed to communicate with server while fetching CampaignMailer.'\n    )\n  }\n}\n\nconst simpleToken = async () => {\n  const res = await axios.get('/legacy/simple-token')\n  return res.data.token\n}\n\nexport { verifyKey, simpleToken }\n"]},"metadata":{},"sourceType":"module"}