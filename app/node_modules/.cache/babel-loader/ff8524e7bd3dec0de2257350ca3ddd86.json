{"ast":null,"code":"import _objectSpread from \"/Users/matthew/Desktop/optizmo/webapp/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/matthew/Desktop/optizmo/webapp/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/matthew/Desktop/optizmo/webapp/app/src/components/landing/LandingForm.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Input, Row, Col, Container, FormFeedback, FormGroup, Label } from 'reactstrap';\nimport clsx from 'clsx';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/bootstrap.css';\nimport { validateEmail, validateInternationalPhone, validatePreference } from '../../utils';\nimport { useAppContext } from '../../contexts/AppContext';\nimport PreferenceSelection from './PreferenceSelection';\nimport styles from './LandingForm.module.css';\nimport { OptoutType } from '../../contracts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar ACCEPTED_SMS_COUNTRY_CODES = ['US', 'GB'];\n\n/**\n * Landing screen form, allowing the user to Opt-Out with email or SMS number.\n * Container component (<Landing />) is responsible for loading/submitting async\n * logic.\n * Campaign Mailer may or may not be present at this point. If it is not, we assume\n * we're opting out Email addresses.\n */\nvar LandingForm = function LandingForm(_ref) {\n  _s();\n\n  var _pageData$preference, _pageData$landing, _pageData$landing2, _pageData$landing3, _pageData$landing4, _pageData$landing5;\n\n  var _ref$submitting = _ref.submitting,\n      submitting = _ref$submitting === void 0 ? false : _ref$submitting,\n      onSubmit = _ref.onSubmit;\n\n  var _useAppContext = useAppContext(),\n      campaignMailer = _useAppContext.campaignMailer,\n      pageData = _useAppContext.pageData;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n  /* We accept, validate, and display internationally formatted numbers (i.e. 18081231231)\n  on the frontend. The backend accepts US/UK numbers in international, or national,\n  lengths without any formatting. */\n\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sms = _useState4[0],\n      setSms = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      preference = _useState6[0],\n      setPreference = _useState6[1];\n\n  var _useState7 = useState({\n    email: true,\n    sms: true,\n    preference: true\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      validation = _useState8[0],\n      setValidation = _useState8[1]; // Email is the default Opt-Out type if Campaign Mailer can't load.\n\n\n  var optoutType = (campaignMailer === null || campaignMailer === void 0 ? void 0 : campaignMailer.optoutType) || OptoutType.Email;\n\n  var validate = function validate() {\n    if (optoutType === OptoutType.Email) {\n      var validEmail = validateEmail(email);\n      var validPreference = validatePreference(preference, (pageData === null || pageData === void 0 ? void 0 : pageData.preference) || []);\n      setValidation(_objectSpread(_objectSpread({}, validate), {}, {\n        email: validEmail,\n        preference: validPreference\n      }));\n      return validEmail && validPreference;\n    } else {\n      var validSms = validateInternationalPhone(sms, ACCEPTED_SMS_COUNTRY_CODES);\n      setValidation(_objectSpread(_objectSpread({}, validate), {}, {\n        sms: validSms\n      }));\n      return validSms;\n    }\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n\n    if (validate()) {\n      onSubmit(email, sms, preference);\n    }\n  };\n\n  var handleEmailChange = function handleEmailChange(newEmail) {\n    setEmail(newEmail);\n  };\n\n  var handleSmsChange = function handleSmsChange(newSms) {\n    setSms(newSms);\n  };\n\n  var handlePreferenceChange = function handlePreferenceChange(newPreference) {\n    setPreference(newPreference);\n    setValidation(_objectSpread(_objectSpread({}, validation), {}, {\n      preference: true\n    }));\n  };\n\n  var renderSmsInput = function renderSmsInput() {\n    var hasError = !validation.sms;\n    return /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(PhoneInput, {\n        country: 'us'\n        /* The backend only knows how to sanitise numbers from these countries.\n        The component requires the codes to be lowercase for some reason. */\n        ,\n        onlyCountries: ACCEPTED_SMS_COUNTRY_CODES.map(function (code) {\n          return code.toLowerCase();\n        }),\n        value: sms,\n        placeholder: \"\",\n        inputProps: {\n          autoFocus: true\n        },\n        containerClass: styles['phone-input-container'],\n        inputClass: clsx(styles['phone-input'], hasError && 'is-invalid'),\n        dropdownClass: styles['phone-dropdown'],\n        onChange: handleSmsChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, _this), hasError ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n        tooltip: true\n        /* Force tooltip to display - default styles expect this element to\n        be adjacent sibling to the input. */\n        ,\n        style: {\n          display: 'block'\n        },\n        children: \"Please enter a valid US/UK phone number.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, _this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var renderEmailInput = function renderEmailInput() {\n    var hasError = !validation.email;\n    return /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"email\",\n        className: \"d-none\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        placeholder: \"Email Address\",\n        autoFocus: true,\n        value: email,\n        onFocus: function onFocus() {\n          return setValidation(_objectSpread(_objectSpread({}, validation), {}, {\n            email: true\n          }));\n        },\n        onChange: function onChange(event) {\n          return handleEmailChange(event.target.value);\n        },\n        valid: !hasError,\n        invalid: hasError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, _this), hasError ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n        tooltip: true,\n        children: \"Please enter a valid email address.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, _this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var renderCTA = function renderCTA() {\n    if (submitting) {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        block: true,\n        disabled: true,\n        children: [\"Unsubscribing\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-spinner fa-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, _this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      block: true,\n      children: \"Unsubscribe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var showPreferenceCenter = // Preference center only currently displays for email opt-outs.\n  optoutType === OptoutType.Email && (pageData === null || pageData === void 0 ? void 0 : (_pageData$preference = pageData.preference) === null || _pageData$preference === void 0 ? void 0 : _pageData$preference.length);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"landing-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: pageData === null || pageData === void 0 ? void 0 : (_pageData$landing = pageData.landing) === null || _pageData$landing === void 0 ? void 0 : _pageData$landing.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, _this), (pageData === null || pageData === void 0 ? void 0 : (_pageData$landing2 = pageData.landing) === null || _pageData$landing2 === void 0 ? void 0 : _pageData$landing2.content) && !(pageData === null || pageData === void 0 ? void 0 : (_pageData$landing3 = pageData.landing) === null || _pageData$landing3 === void 0 ? void 0 : _pageData$landing3.contentBelowEmail) ? /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"landing-form__content-above\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: pageData.landing.content\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, _this) : null, /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        padding: '16px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            sm: 10,\n            md: 7,\n            children: [optoutType === OptoutType.Email ? renderEmailInput() : null, optoutType === OptoutType.SMS ? renderSmsInput() : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingTop: 16\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            sm: 5,\n            md: 3,\n            children: renderCTA()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, _this), (pageData === null || pageData === void 0 ? void 0 : (_pageData$landing4 = pageData.landing) === null || _pageData$landing4 === void 0 ? void 0 : _pageData$landing4.content) && (pageData === null || pageData === void 0 ? void 0 : (_pageData$landing5 = pageData.landing) === null || _pageData$landing5 === void 0 ? void 0 : _pageData$landing5.contentBelowEmail) ? /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"landing-form__content-below\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingTop: 16\n          },\n          dangerouslySetInnerHTML: {\n            __html: pageData.landing.content\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, _this) : null, showPreferenceCenter && (pageData === null || pageData === void 0 ? void 0 : pageData.preference) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingTop: 16\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(PreferenceSelection, {\n          preferenceOptions: pageData.preference,\n          preference: preference,\n          showAlert: !validation.preference,\n          onPreferenceSelected: handlePreferenceChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(LandingForm, \"G0T+8SKl8mJ0yobc9SDoR778PoU=\", false, function () {\n  return [useAppContext];\n});\n\n_c = LandingForm;\nexport default LandingForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LandingForm\");","map":{"version":3,"sources":["/Users/matthew/Desktop/optizmo/webapp/app/src/components/landing/LandingForm.tsx"],"names":["React","useState","Button","Input","Row","Col","Container","FormFeedback","FormGroup","Label","clsx","PhoneInput","validateEmail","validateInternationalPhone","validatePreference","useAppContext","PreferenceSelection","styles","OptoutType","ACCEPTED_SMS_COUNTRY_CODES","LandingForm","submitting","onSubmit","campaignMailer","pageData","email","setEmail","sms","setSms","preference","setPreference","validation","setValidation","optoutType","Email","validate","validEmail","validPreference","validSms","handleSubmit","event","preventDefault","handleEmailChange","newEmail","handleSmsChange","newSms","handlePreferenceChange","newPreference","renderSmsInput","hasError","map","code","toLowerCase","autoFocus","display","renderEmailInput","target","value","renderCTA","showPreferenceCenter","length","landing","title","content","contentBelowEmail","__html","padding","SMS","paddingTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport {\n  Button,\n  Input,\n  Row,\n  Col,\n  Container,\n  FormFeedback,\n  FormGroup,\n  Label\n} from 'reactstrap'\nimport clsx from 'clsx'\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/bootstrap.css'\nimport {\n  validateEmail,\n  validateInternationalPhone,\n  validatePreference\n} from '../../utils'\nimport { useAppContext } from '../../contexts/AppContext'\nimport PreferenceSelection from './PreferenceSelection'\nimport styles from './LandingForm.module.css'\nimport { OptoutType } from '../../contracts'\n\nconst ACCEPTED_SMS_COUNTRY_CODES = ['US', 'GB']\n\nexport interface LandingFormProps {\n  submitting?: boolean\n  onSubmit(email: string, sms: string, preferences: number[]): void\n}\n\n/**\n * Landing screen form, allowing the user to Opt-Out with email or SMS number.\n * Container component (<Landing />) is responsible for loading/submitting async\n * logic.\n * Campaign Mailer may or may not be present at this point. If it is not, we assume\n * we're opting out Email addresses.\n */\nconst LandingForm = ({ submitting = false, onSubmit }: LandingFormProps) => {\n  const { campaignMailer, pageData } = useAppContext()\n  const [email, setEmail] = useState('')\n  /* We accept, validate, and display internationally formatted numbers (i.e. 18081231231)\n  on the frontend. The backend accepts US/UK numbers in international, or national,\n  lengths without any formatting. */\n  const [sms, setSms] = useState('')\n  const [preference, setPreference] = useState<number[]>([])\n  const [validation, setValidation] = useState<Record<string, boolean>>({\n    email: true,\n    sms: true,\n    preference: true\n  })\n\n  // Email is the default Opt-Out type if Campaign Mailer can't load.\n  const optoutType = campaignMailer?.optoutType || OptoutType.Email\n\n  const validate = () => {\n    if (optoutType === OptoutType.Email) {\n      const validEmail = validateEmail(email)\n      const validPreference = validatePreference(\n        preference,\n        pageData?.preference || []\n      )\n\n      setValidation({\n        ...validate,\n        email: validEmail,\n        preference: validPreference\n      })\n\n      return validEmail && validPreference\n    } else {\n      const validSms = validateInternationalPhone(\n        sms,\n        ACCEPTED_SMS_COUNTRY_CODES\n      )\n\n      setValidation({\n        ...validate,\n        sms: validSms\n      })\n\n      return validSms\n    }\n  }\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    if (validate()) {\n      onSubmit(email, sms, preference)\n    }\n  }\n\n  const handleEmailChange = (newEmail: string) => {\n    setEmail(newEmail)\n  }\n\n  const handleSmsChange = (newSms: string) => {\n    setSms(newSms)\n  }\n\n  const handlePreferenceChange = (newPreference: number[]) => {\n    setPreference(newPreference)\n    setValidation({ ...validation, preference: true })\n  }\n\n  const renderSmsInput = () => {\n    const hasError = !validation.sms\n\n    return (\n      <FormGroup>\n        <PhoneInput\n          country={'us'}\n          /* The backend only knows how to sanitise numbers from these countries.\n          The component requires the codes to be lowercase for some reason. */\n          onlyCountries={ACCEPTED_SMS_COUNTRY_CODES.map(code =>\n            code.toLowerCase()\n          )}\n          value={sms}\n          placeholder=''\n          inputProps={{\n            autoFocus: true\n          }}\n          containerClass={styles['phone-input-container']}\n          inputClass={clsx(styles['phone-input'], hasError && 'is-invalid')}\n          dropdownClass={styles['phone-dropdown']}\n          onChange={handleSmsChange}\n        />\n        {hasError ? (\n          <FormFeedback\n            tooltip\n            /* Force tooltip to display - default styles expect this element to\n            be adjacent sibling to the input. */\n            style={{ display: 'block' }}\n          >\n            Please enter a valid US/UK phone number.\n          </FormFeedback>\n        ) : null}\n      </FormGroup>\n    )\n  }\n\n  const renderEmailInput = () => {\n    const hasError = !validation.email\n\n    return (\n      <FormGroup>\n        <Label for='email' className='d-none'>\n          Email Address\n        </Label>\n        <Input\n          type='email'\n          name='email'\n          id='email'\n          placeholder='Email Address'\n          autoFocus\n          value={email}\n          onFocus={() => setValidation({ ...validation, email: true })}\n          onChange={event => handleEmailChange(event.target.value)}\n          valid={!hasError}\n          invalid={hasError}\n        />\n        {hasError ? (\n          <FormFeedback tooltip>\n            Please enter a valid email address.\n          </FormFeedback>\n        ) : null}\n      </FormGroup>\n    )\n  }\n\n  const renderCTA = () => {\n    if (submitting) {\n      return (\n        <Button type='submit' block disabled>\n          Unsubscribing&nbsp;&nbsp;\n          <i className='fas fa-spinner fa-spin' />\n        </Button>\n      )\n    }\n\n    return (\n      <Button type='submit' color='primary' block>\n        Unsubscribe\n      </Button>\n    )\n  }\n\n  const showPreferenceCenter =\n    // Preference center only currently displays for email opt-outs.\n    optoutType === OptoutType.Email && pageData?.preference?.length\n\n  return (\n    <div data-testid='landing-form'>\n      <h2>{pageData?.landing?.title}</h2>\n\n      {pageData?.landing?.content && !pageData?.landing?.contentBelowEmail ? (\n        <div data-testid='landing-form__content-above'>\n          <div dangerouslySetInnerHTML={{ __html: pageData.landing.content }} />\n        </div>\n      ) : null}\n\n      <Container style={{ padding: '16px 0' }}>\n        <form onSubmit={handleSubmit}>\n          <Row className='justify-content-center'>\n            <Col sm={10} md={7}>\n              {optoutType === OptoutType.Email ? renderEmailInput() : null}\n              {optoutType === OptoutType.SMS ? renderSmsInput() : null}\n            </Col>\n          </Row>\n\n          {/* spring */}\n          <div style={{ paddingTop: 16 }} />\n\n          <Row className='justify-content-center'>\n            <Col sm={5} md={3}>\n              {renderCTA()}\n            </Col>\n          </Row>\n        </form>\n\n        {/** This feature is only being used by one client... or zero */}\n        {pageData?.landing?.content && pageData?.landing?.contentBelowEmail ? (\n          <div data-testid='landing-form__content-below'>\n            <div\n              style={{ paddingTop: 16 }}\n              dangerouslySetInnerHTML={{ __html: pageData.landing.content }}\n            />\n          </div>\n        ) : null}\n\n        {showPreferenceCenter && pageData?.preference ? (\n          <>\n            <div style={{ paddingTop: 16 }} />\n\n            <PreferenceSelection\n              preferenceOptions={pageData.preference}\n              preference={preference}\n              showAlert={!validation.preference}\n              onPreferenceSelected={handlePreferenceChange}\n            />\n          </>\n        ) : null}\n      </Container>\n    </div>\n  )\n}\n\nexport default LandingForm\n"]},"metadata":{},"sourceType":"module"}